openapi: 3.0.0
info:
  description: "Thing Action Management System"
  version: "1.0.0"
  title: "TAMS"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
tags:
  - name: "details"
    description: "details about shit"
  - name: "job"
    description: "getting things done"

paths:
  /state:
    post:
      tags:
        - "internal"
      summary: "job status interface"
      description: "Every 'thing' propagates its status to the other systems.
        Events can be changes to a Job-Status or just related to the Job in general."
      operationId: "jobStatus"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/State"
        required: true
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/State"
            application/json:
              schema:
                $ref: "#/components/schemas/State"

  /metric:
    post:
      tags:
        - "internal"
      summary: "metric schnittstelle"
      description: "Sensors periodically propagate their measurements to TAMS.
        TAMS then aggregates and analyses those and provides the Data again
        to other systems. The general period is around 1+ seconds"
      operationId: "metric"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                metadata:
                  $ref: "refs/types.yaml#/components/schemas/Event"
                created:
                  type: string
                  example: "2017-04-28T08:24:31.614+02:00"
                  description: "Timestamp of the event, ISO 8601 coded, UTC timezone (pattern yyyy-MM-ddTHH:mm:ss.SSSZ)"
                  format: "date-time"
                metrics:
                  type: array
                  items:
                    $ref: "refs/types.yaml#/components/schemas/Metric"
      responses:
        "405":
          description: "Invalid input"

  /alarm:
    post:
      tags:
        - "internal"
      summary: "alarm schnittstelle"
      description: "Sensors report 'important' or 'unusal' events to TAMS.
        Acknowledged alarms are removed from the list."
      operationId: "alarm"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                metadata:
                  $ref: "refs/types.yaml#/components/schemas/Event"
                created:
                  type: string
                  example: "2017-04-28T08:24:31.614+02:00"
                  description:
                    "Timestamp of the event, ISO 8601 coded, UTC timezone
                    (pattern yyyy-MM-ddTHH:mm:ss.SSSZ)"
                  format: "date-time"
                alarms:
                  type: array
                  items:
                    $ref: "refs/types.yaml#/components/schemas/Alarm"
      responses:
        "405":
          description: "Invalid input"

  /{location}/{type}/{name}/alarm:
    post:
      tags:
        - "external"
      summary: "alarm schnittstelle"
      description: "TAMS aggregates the alarms it gets from the sensors. The
        whole list models the current state of reality. Meaning alarms in the
        list are still occuring/unfixed, while the ones that are not in there
        (anymore) are viewed as 'fixed'"
      operationId: "alarmList"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                metadata:
                  $ref: "refs/types.yaml#/components/schemas/Event"
                alarm:
                  type: array
                  items:
                    $ref: "refs/types.yaml#/components/schemas/Alarm"
      responses:
        "405":
          description: "Invalid input"
      parameters:
        - $ref: "refs/parameters.yaml#/components/parameters/location"
        - $ref: "refs/parameters.yaml#/components/parameters/type"
        - $ref: "refs/parameters.yaml#/components/parameters/name"

  /{location}/{type}/{name}/metric:
    post:
      tags:
        - "external"
      summary: "metric schnittstelle"
      description: "TAMS collects and aggregates all data and can therefore
        answer when asked for a specific timeframe. Typically this is useful
        when you want a short overview about the current situation, think
        like 'What happened in the last X seconds?'"
      operationId: "metricList"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                metadata:
                  $ref: "refs/types.yaml#/components/schemas/Event"
                metrics:
                  type: array
                  items:
                    $ref: "refs/types.yaml#/components/schemas/Metric"
      responses:
        "405":
          description: "Invalid input"
      parameters:
        - $ref: "refs/parameters.yaml#/components/parameters/location"
        - $ref: "refs/parameters.yaml#/components/parameters/type"
        - $ref: "refs/parameters.yaml#/components/parameters/name"

components:
  schemas:
    Unit:
      type: object
      title: a Unit
      properties:
        height:
          type: integer
          example: 123
          description: "Height of the unit in mm"
        width:
          type: integer
          example: 123
          description: "Width of the unit in mm"
        lenght:
          type: integer
          example: 123
          description: "Lenght of the unit in mm"
        weight:
          type: integer
          example: 123
          description: "weight in Kg"
        type:
          type: string
          example: 123
          description: "Container Size/Typecode "
        number:
          type: string
          example: 123
          description: "Container Number"
        piggyBack:
          type: boolean
          example: false
          description: "Indicates if the container is a piggyback"
      xml:
        name: "Unit"

    State:
      type: object
      title: a State
      properties:
        created:
          type: string
          example: "2017-04-28T08:24:31.614+02:00"
          description: "ASDF Timestamp of the event, ISO 8601 coded, UTC timezone (pattern yyyy-MM-ddTHH:mm:ss.SSSZ)"
          format: "date-time"
        unit:
          $ref: "#/components/schemas/Unit"
        metadata:
          $ref: "refs/types.yaml#/components/schemas/Event"
        jobType:
          $ref: "refs/enums.yaml#/components/schemas/JobType"
        jobStatus:
          $ref: "refs/enums.yaml#/components/schemas/JobStatus"

      xml:
        name: "State"
